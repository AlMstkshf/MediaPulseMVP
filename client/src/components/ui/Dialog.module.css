/* Dialog Animation and Styling */

.dialogOverlay {
position: fixed;
inset: 0;
z-index: 50;
background-color: rgba(0, 0, 0, 0.8);
transition: opacity 200ms ease-in-out;
}

.dialogOverlay[data-state="open"] {
animation: fadeIn 150ms ease-out;
}

.dialogOverlay[data-state="closed"] {
animation: fadeOut 150ms ease-in;
}

.dialogContent {
position: fixed;
left: 50%;
top: 50%;
z-index: 50;
display: grid;
width: 100%;
max-width: 32rem; /* max-w-lg /
transform: translate(-50%, -50%);
gap: 1rem;
border: 1px solid var(--border);
background-color: var(--background);
padding: 1.5rem;
box-shadow:
0 10px 15px -3px rgba(0, 0, 0, 0.1),
0 4px 6px -2px rgba(0, 0, 0, 0.05);
/ Animate both opacity and transform */
transition: opacity 200ms ease-in-out, transform 200ms ease-in-out;
}

.dialogContent[data-state="open"] {
animation: contentShow 200ms ease-out;
}

.dialogContent[data-state="closed"] {
animation: contentHide 200ms ease-in;
}

.dialogHeader {
display: flex;
flex-direction: column;
gap: 0.375rem;
text-align: center;
}

@media (min-width: 640px) {
.dialogHeader {
text-align: left;
}

.dialogContent {
border-radius: 0.5rem;
}

.dialogFooter {
flex-direction: row;
justify-content: flex-end;
gap: 0.5rem;
}
}

.dialogFooter {
display: flex;
flex-direction: column-reverse;
gap: 0.5rem;
}

.dialogTitle {
font-size: 1.125rem;
font-weight: 600;
line-height: 1;
letter-spacing: -0.025em;
}

.dialogDescription {
font-size: 0.875rem;
color: var(--muted-foreground);
}

.closeButton {
position: absolute;
top: 1rem;
right: 1rem;
border-radius: 0.25rem;
opacity: 0.7;
transition: opacity 150ms cubic-bezier(0.4, 0, 0.2, 1);
}

.closeButton:hover {
opacity: 1;
}

.closeButton:focus {
outline: none;
box-shadow: 0 0 0 2px var(--ring);
}

/* Animations */
@keyframes fadeIn {
from { opacity: 0; }
to   { opacity: 1; }
}

@keyframes fadeOut {
from { opacity: 1; }
to   { opacity: 0; }
}

@keyframes contentShow {
from {
opacity: 0;
transform: translate(-50%, -48%) scale(0.95);
}
to {
opacity: 1;
transform: translate(-50%, -50%) scale(1);
}
}

@keyframes contentHide {
from {
opacity: 1;
transform: translate(-50%, -50%) scale(1);
}
to {
opacity: 0;
transform: translate(-50%, -48%) scale(0.95);
}
}

